name: Build and Deploy

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      component:
        description: "Component to build (client, server, both)"
        required: true
        default: "both"
        type: choice
        options:
          - client
          - server
          - both
      custom_tags:
        description: "Custom Docker tags (comma-separated for multiple tags)"
        required: false
        default: ""
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            MATRIX='[{"name":"Client","dockerfile":"client/Dockerfile.prod","image":"guptaashwanee/test-client","context":"client"},{"name":"Server","dockerfile":"server/Dockerfile.prod","image":"guptaashwanee/test-server","context":"server"}]'
          else
            if [ "${{ github.event.inputs.component }}" == "both" ]; then
              MATRIX='[{"name":"Client","dockerfile":"client/Dockerfile.prod","image":"guptaashwanee/test-client","context":"client"},{"name":"Server","dockerfile":"server/Dockerfile.prod","image":"guptaashwanee/test-server","context":"server"}]'
            elif [ "${{ github.event.inputs.component }}" == "client" ]; then
              MATRIX='[{"name":"Client","dockerfile":"client/Dockerfile.prod","image":"guptaashwanee/test-client","context":"client"}]'
            else
              MATRIX='[{"name":"Server","dockerfile":"server/Dockerfile.prod","image":"guptaashwanee/test-server","context":"server"}]'
            fi
          fi
          echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT
        shell: bash

  build-and-deploy:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          labels: |
            org.opencontainers.image.title=ANSCER ANYA ${{ matrix.name }}
            org.opencontainers.image.description=Anscer Robotics (Robot Control Application) - Anya
            org.opencontainers.image.vendor=ANSCER ROBOTICS
            org.opencontainers.image.source=${{ github.repositoryUrl }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Prepare Docker Tags
        id: prepare_tags
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.custom_tags }}" ]]; then
            CUSTOM_TAGS=$(echo "${{ github.event.inputs.custom_tags }}" | tr ',' '\n' | sed "s|^|${{ matrix.image }}:|")
            TAGS=$(echo "${{ steps.meta.outputs.tags }} ${CUSTOM_TAGS}" | tr ' ' '\n' | sort -u | tr '\n' ',')
            echo "CUSTOM_TAGS=${TAGS%,}" >> $GITHUB_ENV
          else
            echo "CUSTOM_TAGS=${{ steps.meta.outputs.tags }}" >> $GITHUB_ENV
          fi
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ env.CUSTOM_TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
